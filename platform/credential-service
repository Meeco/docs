Meeco’s Credential Service enables the issuance, exchange, request, verification and revocation of Verifiable Credentials (VCs). It does this by leveraging open standards to facilitate the creation of trust-based, data exchange ecosystems. Once onboarded, Issuers and Verifiers can develop a range of credential services based on secure, cryptographic, tamper-proof data exchanges. Our Credential Service enables trusted Issuers to design and issue custom VCs which can in-turn be verified by trusted Verifiers.

Meeco’s Credential Service can be used in conjunction with our Authorisation Tenant & Organisation Manager (ATOM), [Vault](platform/vault/overview.md) and Wallet offerings to build a complete end-to-end credential service. 

## VCs and VPs
The VC data model that we employ has been established as a standard by [W3C](https://www.w3.org/TR/vc-data-model/). Both VCs and Verifiable Presentations (VPs) are included in this standard and it is important that both concepts are understood when exploring VC workflows.

VCs are comprised of one or more tamper-evident claims plus associated metadata, all of which relate to an entity (a natural or legal person, object, place or thing). VCs include digital proof mechanisms that enable verification. One of these mechanisms is digital signatures which are used to prove credential validity. VCs are issued by Issuers to Holders and often contain an Issuer DID that resolves to a DID document. The DID document references a public key in order to check the Issuer’s cryptographic signature, proving the authenticity of the Issuer.

VPs contain data (claims) that are extracted and/or combined from (multiple) VCs. They are presented by Holders to Verifiers who can then cryptographically verify the authenticity of the issuer.

We use the OpenID for Verifiable Credential (OIDC4VC) specification to enable Organisations using our Credential Service to issue credentials to wallet Holders. In addition, we also utilise the OpenID Connect for Verifiable Presentations (OIDC4VP) specification for the verification of Holder credentials. Both of these specifications enable interoperability between systems including authorisation mechanisms and digital wallets, and ensures each party can operate independently from one another.

## Schemas
Credential Schemas are used to provide a standardised structure to a set of claims in order to be interoperable. Schemas used in the creation of VCs must include certain criteria to ensure Verifiers can verify that the data conforms to the chosen schema. The required criteria includes the following properties:
- type (schema type)
- id (URI identifying the chosen schema file)

## Credential Lifecycle
Typically a VC has a lifecycle comprised of the following events:
- Issuance: An Issuer issues a signed VC to a Holder who consents to receiving the VC in their digital wallet. There are different modes of issuance:
 -The VC is pushed from an Issuer, where a thorough consent and Issuer verification mechanism is important to protect the Holder from receiving unsolicited content by unknown issuers. These mechanisms are important to avoid the next era of spam.
 - An entity (such as a Holder) can proactively request a VC to be issued to them.
 - Issuance of a VC can be done instantaneously or deferred until a pre-determined time. 
- Verification: A Holder will present a VC for verification to a Verifier. By implementing the W3C VP format, credentials can be combined to fulfil a request for credentials, and Holders can implement selective disclosure if available. A Verifier will perform a number of checks when verifying a credential:
 - The Issuer’s signature (via its DID document)
 - The credential’s expiry, and
 - The credential’s validity by looking up the status of the credential in a Verifiable Registry such as a Status List.
- Revocation or suspension: An Issuer may revoke or suspend a credential and register its new status in a Verifiable Registry, available to Verifiers upon verification. This makes verification of credentials faster and more accurate. The W3C standard has designed a secure way of storing this information publicly in the [Status List 2021](https://w3c.github.io/vc-status-list-2021/) specification. Verifiable Registries can be hosted in a number of different ways:
 - Publicly
 - Centralised (on the web)
 - Decentralised (on a distributed ledger).
 
